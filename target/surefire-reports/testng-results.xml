<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="AllTestsSuite" duration-ms="220354" started-at="2020-04-01T10:56:17Z" finished-at="2020-04-01T10:59:57Z">
    <groups>
    </groups>
    <test name="Test Case1" duration-ms="220354" started-at="2020-04-01T10:56:17Z" finished-at="2020-04-01T10:59:57Z">
      <class name="testCases.AllTestCases">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testCases.AllTestCases@646153]" name="beforeSuite" is-config="true" duration-ms="500" started-at="2020-04-01T16:26:16Z" finished-at="2020-04-01T16:26:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testCases.AllTestCases@646153]" name="beforeTest" is-config="true" duration-ms="41057" started-at="2020-04-01T16:26:17Z" finished-at="2020-04-01T16:26:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@646153]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2020-04-01T16:26:58Z" finished-at="2020-04-01T16:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.bootstrapDropdownMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@646153]" name="bootstrapDropdownMethod" duration-ms="20578" started-at="2020-04-01T16:26:58Z" finished-at="2020-04-01T16:27:19Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: -0.043  (Session info: chrome=80.0.3987.149)Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'Driver info: org.openqa.selenium.chrome.ChromeDriverCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57855}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}Session ID: d6aa4e873c971a576a24bf5332eb3fba]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: -0.043  (Session info: chrome=80.0.3987.149)Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'System info: host: 'DESKTOP-UEKOIJ6', ip: '10.133.60.35', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_241'Driver info: org.openqa.selenium.chrome.ChromeDriverCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\91829\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57855}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}Session ID: d6aa4e873c971a576a24bf5332eb3fbaat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)at testCases.AllTestCases.bootstrapDropdownMethod(AllTestCases.java:92)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bootstrapDropdownMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@646153]" name="getResult" is-config="true" duration-ms="2" started-at="2020-04-01T16:27:19Z" finished-at="2020-04-01T16:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bootstrapDropdownMethod status=SKIP method=AllTestCases.bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@646153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@646153]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-04-01T16:27:19Z" finished-at="2020-04-01T16:27:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.bootstrapDropdownMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@646153]" name="bootstrapDropdownMethod" duration-ms="8241" started-at="2020-04-01T16:27:19Z" finished-at="2020-04-01T16:27:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bootstrapDropdownMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@646153]" name="getResult" is-config="true" duration-ms="107" started-at="2020-04-01T16:27:27Z" finished-at="2020-04-01T16:27:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bootstrapDropdownMethod status=SUCCESS method=AllTestCases.bootstrapDropdownMethod()[pri:0, instance:testCases.AllTestCases@646153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@646153]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-04-01T16:27:27Z" finished-at="2020-04-01T16:27:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.brokenLinkMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="brokenLinkMethod()[pri:0, instance:testCases.AllTestCases@646153]" name="brokenLinkMethod" duration-ms="69199" started-at="2020-04-01T16:27:27Z" finished-at="2020-04-01T16:28:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokenLinkMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@646153]" name="getResult" is-config="true" duration-ms="2" started-at="2020-04-01T16:28:36Z" finished-at="2020-04-01T16:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=brokenLinkMethod status=SUCCESS method=AllTestCases.brokenLinkMethod()[pri:0, instance:testCases.AllTestCases@646153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@646153]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-04-01T16:28:36Z" finished-at="2020-04-01T16:28:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.fullPageScreenshot() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fullPageScreenshot()[pri:0, instance:testCases.AllTestCases@646153]" name="fullPageScreenshot" duration-ms="46228" started-at="2020-04-01T16:28:36Z" finished-at="2020-04-01T16:29:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullPageScreenshot -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@646153]" name="getResult" is-config="true" duration-ms="2" started-at="2020-04-01T16:29:22Z" finished-at="2020-04-01T16:29:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fullPageScreenshot status=SUCCESS method=AllTestCases.fullPageScreenshot()[pri:0, instance:testCases.AllTestCases@646153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testCases.AllTestCases@646153]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-04-01T16:29:22Z" finished-at="2020-04-01T16:29:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.AllTestCases.handlingMultipleWindows() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handlingMultipleWindows()[pri:0, instance:testCases.AllTestCases@646153]" name="handlingMultipleWindows" duration-ms="32640" started-at="2020-04-01T16:29:22Z" finished-at="2020-04-01T16:29:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handlingMultipleWindows -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCases.AllTestCases@646153]" name="getResult" is-config="true" duration-ms="11" started-at="2020-04-01T16:29:55Z" finished-at="2020-04-01T16:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=handlingMultipleWindows status=SUCCESS method=AllTestCases.handlingMultipleWindows()[pri:0, instance:testCases.AllTestCases@646153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testCases.AllTestCases@646153]" name="afterTest" is-config="true" duration-ms="2175" started-at="2020-04-01T16:29:55Z" finished-at="2020-04-01T16:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.AllTestCases -->
    </test> <!-- Test Case1 -->
  </suite> <!-- AllTestsSuite -->
</testng-results>
